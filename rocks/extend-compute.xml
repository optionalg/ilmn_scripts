<?xml version="1.0" standalone="no"?>


<kickstart>

<description>

	A skeleton XML node file. This file is a template and is intended
	as an example of how to customize your Rocks cluster. Kickstart XML
	nodes such as this describe packages and "post installation" shell
	scripts for your cluster.

	XML files in the site-nodes/ directory should be named either
	"extend-[name].xml" or "replace-[name].xml", where [name] is
	the name of an existing xml node. 

	If your node is prefixed with replace, its instructions will be used
	instead of the official node's. If it is named extend, its directives
	will be concatenated to the end of the official node.

</description>


<changelog>
</changelog>

<main>
	<!-- kickstart 'main' commands go here -->
</main>

<pre>
	<!-- partitioning commands go here -->
</pre>


<!-- There may be as many packages as needed here. Just make sure you only
     uncomment as many package lines as you need. Any empty <package></package>
     tags are going to confuse rocks and kill the installation procedure
-->
<!-- <package> insert 1st package name here and uncomment the line</package> -->
<!-- <package> insert 2nd package name here and uncomment the line</package> -->
<!-- Begin Custom Packages -->
<package>netxtreme2</package>
<package>ImageMagick</package>
<package>ixgbe</package>
<package>compat-libstdc++-33.i386</package>
<package>iperf</package>
<package>htop</package>
<package>vim-common</package>
<package>vim-minimal</package>
<package>vim-enhanced</package>
<package>fftw3</package>
<package>fftw3-devel</package>
<package>gnuplot</package>
<package>perl-XML-Parser</package>
<package>perl-XML-Simple</package>
<package>libxslt</package>
<package>mysql</package>
<package>perl-Compress-Zlib</package>
<package>perl-DBD-MySQL</package>
<package>perl-FileHandle-Unget</package>
<package>perl-GD</package>
<package>perl-List-MoreUtils</package>
<package>perl-Math-Bezier</package>
<package>perl-Math-BigInt</package>
<package>perl-Math-Round</package>
<package>perl-Module-Load</package>
<package>perl-Module-Loaded</package>
<package>perl-Math-VecStat</package>
<package>perl-Params-Validate</package>
<package>perl-Readonly</package>
<package>perl-Regexp-Common</package>
<package>perl-Set-IntSpan</package>
<package>perl-DBD-MySQL</package>
<package>neon</package>
<package>lynx</package>
<package>mutt</package>
<package>subversion</package>
<package>ipython</package>
<package>tix</package>
<package>tkinter</package>
<package>python-imaging</package>
<package>screen</package>
<package>strace</package>
<package>libxml2.x86_64</package>
<package>libxml2.i386</package>
<package>iozone</package>
<package>dstat</package>
<package>jre</package>
<package>busybox</package>
<package>giflib</package>
<package>libexif</package>
<package>R</package>
<package>blas</package>
<package>suitesparse</package>
<package>numpy</package>
<package>scipy</package>
<package>lapack</package>
<package>device-mapper-multipath-libs</package>
<package>kexec-tools</package>
<package>ql2xxx-firmware</package>
<package>sssd</package>
<package>authconfig</package>
<package>authconfig-gtk</package>
<package>nfs4-acl-tools</package>
<package>kmod-xfs</package>
<package>xfsprogs</package>
<package>hdf5</package>
<package>collectl</package>

<!-- Ghostscript + requirements -->
<package>libfontenc</package>
<package>libXfont</package>
<package>xorg-x11-font-utils</package>
<package>ttmkfdir</package>
<package>libFS</package>
<package>libtiff</package>
<package>gnutls</package>
<package>cups-libs</package>
<package>chkfontpath</package>
<package>xorg-x11-xfs</package>
<package>urw-fonts</package>
<package>ghostscript</package>
<package>ghostscript-fonts</package>
<!-- END Ghostscript + requirements -->

<!-- Python26 -->
<package>libffi</package>
<package>python26</package>
<package>python26-libs</package>
<!-- End Python26 -->

<!-- Python Pylab Module -->
<package>python-dateutil</package>
<package>python-matplotlib</package>
<package>python-matplotlib-tk</package>
<package>pytz</package>
<!-- end python pylab modules -->

<!-- UEK Kernel Section -->
<package>kernel-uek</package>
<package>kernel-uek-firmware</package>
<package>oraclelinux-release</package>
<package>bnx2</package>
<!-- End UEK Kernel -->

<!-- Nagios requirements -->
<package>nrpe</package>
<package>nagios-plugins</package>
<package>perl-Crypt-DES</package>
<package>perl-Digest-HMAC</package>
<package>perl-Digest-SHA1</package>
<package>perl-Net-SNMP</package>

<!-- remove 32-bit java -->
<package disable="1">jdk.i586</package>
<!-- end remove 32-bit java -->


<post>
	<!-- Insert your post installation script here. This
	code will be executed on the destination node after the
	packages have been installed. Typically configuration files
	are built and services setup in this section. -->

	<!-- WARNING: Watch out for special XML chars like ampersand,
	greater/less than and quotes. A stray ampersand will cause the
	kickstart file building process to fail, thus, you won't be able
	to reinstall any nodes. It is recommended that after you create an
	XML node file, that you run:

		xmllint -noout file.xml
	-->

	<eval shell="python">

		<!-- This is python code that will be executed on the
		frontend node during kickstart file generation. You may contact
		the database, make network queries, etc.  These sections are
		generally used to help build more complex configuration
		files.  The 'shell' attribute is optional and may point to any
		language interpreter such as "bash", "perl", "ruby", etc.
		By default shell="bash".  -->

	</eval>

<!-- Node Changes - Config Files --> 

/bin/chmod a+rwx /state/partition1

if [ `fdisk -l /dev/sdb | wc -l` -gt 0 ]; then
	/sbin/parted /dev/sdb -s mklabel gpt
/sbin/parted /dev/sdb -s -- mkpart primary 0 -1
	/sbin/mkfs.xfs /dev/sdb1
	/bin/sed "/partition2/d" /etc/fstab  > /tmp/fstab
	/bin/sed '/partition1/ a\
	/dev/sdb1               /state/partition2       xfs    defaults        1 2' /tmp/fstab > /tmp/fstab.good
	/bin/cp /tmp/fstab.good /etc/fstab
	/bin/mkdir /state/partition2
	/bin/mount /state/partition2
	/bin/chmod a+rwx /state/partition2
	/bin/ln -s /state/partition2 /scratch
fi

<file name="/etc/ntp.conf" mode="overwrite"> 
restrict default kod nomodify notrap nopeer noquery 
restrict 127.0.0.1 
server ntp.illumina.com 
server 127.127.1.0
fudge   127.127.1.0 stratum 10
driftfile /var/lib/ntp/drift
keys /etc/ntp/keys
</file>

<file name="/etc/idmapd.conf" mode="overwrite">
[General]

Verbosity = 0
Pipefs-Directory = /var/lib/nfs/rpc_pipefs
Domain = ILLUMINA.COM 

[Mapping]

Nobody-User = nobody
Nobody-Group = nobody

[Translation]
Method = nsswitch
</file>


<file name="/etc/nscd.conf" mode="overwrite">
#
# /etc/nscd.conf
#
# An example Name Service Cache config file.  This file is needed by nscd.
#
# Currently supported cache names (services): passwd, group, hosts
#


#       logfile                 /var/log/nscd.log
#       threads                 6
#       max-threads             128
        server-user             nscd
#       stat-user               nocpulse
        debug-level             0
#       reload-count            5
        paranoia                no
#       restart-interval        3600

        enable-cache            passwd          no
        positive-time-to-live   passwd          600
        negative-time-to-live   passwd          20
        suggested-size          passwd          211
        check-files             passwd          yes
        persistent              passwd          yes
        shared                  passwd          yes
        max-db-size             passwd          33554432
        auto-propagate          passwd          yes

        enable-cache            group           no
        positive-time-to-live   group           3600
        negative-time-to-live   group           60
        suggested-size          group           211
        check-files             group           yes
        persistent              group           yes
        shared                  group           yes
        max-db-size             group           33554432
        auto-propagate          group           yes

        enable-cache            hosts           yes
        positive-time-to-live   hosts           3600
        negative-time-to-live   hosts           20
        suggested-size          hosts           211
        check-files             hosts           yes
        persistent              hosts           yes
        shared                  hosts           yes
        max-db-size             hosts           33554432
</file>


<file name="/etc/sysconfig/rocks-post" mode="append"> 
#put something here if you want to do it after the first reboot

sc_zone=$(/opt/rocks/bin/rocks list host interface | grep ` hostname -s ` | grep uscp-prd-isi01 |  awk '{ print $2}')

if [ -n "$sc_zone" ]; then
	sed -i -e "s/uscp-prd-isi01/$sc_zone/g" /etc/fstab
fi

umount -a -t nfs
mount -a -t nfs

</file>


<file name="/etc/sysconfig/iptables" mode="overwrite" > 
# Firewall rules 
</file>

<file name="/etc/sssd/sssd.conf" mode="overwrite"> 
[sssd] 
config_file_version = 2 
reconnection_retries = 3 
debug_level = 0 
sbus_timeout = 30 
services = nss, pam 
domains = USSD

[nss]
filter_groups = root
filter_users = root
reconnection_retries = 3

[pam]
offline_credentials_expiration = 3
offline_failed_login_delay = 5

[domain/USSD]
# San Diego domain configs
min_id = 500
id_provider = ldap
auth_provider = ldap
description = LDAP domain with AD server 
cache_credentials = true 
entry_cache_timeout = 14400 
account_cache_expiration = 7 
enumerate = false 
offline_credentials_expiration = 3 
offline_failed_login_attempts = 5 
lookup_family_order = ipv4_only 
dns_resolver_timeout = 3

# Kerberos domain configs
krb5_realm = ILLUMINA.COM
krb5_server = 10.20.16.10:88, 10.10.1.10:88, 10.10.48.5:88
krb5_kpasswd = 10.20.16.10:749, 10.10.1.10:749, 10.10.48.5:749
krb5_ccachedir = /tmp
krb5_lifetime = 24h

# LDAP domain configs
# Set uri to your site AD list of &lt;AD hostname>:&lt;port>
# Set search base to match your site domain
# Set bind DN and user/passwd to match your site
ldap_uri = ldap://10.10.48.5:3268, ldap://10.10.1.10:3268, ldap://10.20.16.10:3268
ldap_search_base = dc=illumina,dc=com
ldap_search_timeout = 3
ldap_default_bind_dn = CN=svc_linuxldap,OU=Service Accounts,DC=illumina,DC=com
ldap_default_authtok_type = password
ldap_default_authtok = RfTA7H7X3oEpqudT
ldap_pwd_policy = none
ldap_tls_reqcert = never

# Map attributes to AD version/schema
ldap_schema = rfc2307bis
ldap_user_object_class = user
ldap_group_object_class = group
ldap_user_name = sAMAccountName
ldap_user_fullname = sAMAccountName
ldap_user_gecos = displayName
ldap_user_uid_number = uidNumber
ldap_user_gid_number = gidNumber
ldap_user_home_directory = unixHomeDirectory 
ldap_user_shell = loginShell 
ldap_group_member = member

# Access Control
access_provider = ldap
ldap_access_filter = memberOf=CN=GRP_HPC_USCP,OU=User Groups,DC=illumina,DC=com
</file>

<file name="/etc/nsswitch.conf" mode="overwrite">
#
# /etc/nsswitch.conf
#
# An example Name Service Switch config file. This file should be
# sorted with the most-used services at the beginning.
#
# The entry '[NOTFOUND=return]' means that the search for an
# entry should stop if the search in the previous entry turned
# up nothing. Note that if the search failed due to some other reason
# (like no NIS server responding) then the search continues with the
# next entry.
#
# Legal entries are:
#
#       nisplus or nis+         Use NIS+ (NIS version 3)
#       nis or yp               Use NIS (NIS version 2), also called YP
#       dns                     Use DNS (Domain Name Service)
#       files                   Use the local files
#       db                      Use the local database (.db) files
#       compat                  Use NIS on compat mode
#       hesiod                  Use Hesiod for user lookups
#       [NOTFOUND=return]       Stop searching if not found so far
#

# To use db, put the "db" in front of "files" for entries you want to be
# looked up first in the databases
#
# Example:
#passwd:    db files nisplus nis
#shadow:    db files nisplus nis
#group:     db files nisplus nis

passwd:     files sss
shadow:     files sss
group:      files sss

#hosts:     db files nisplus nis dns
hosts:      files dns

# Example - obey only what nisplus tells us...
#services:   nisplus [NOTFOUND=return] files
#networks:   nisplus [NOTFOUND=return] files
#protocols:  nisplus [NOTFOUND=return] files
#rpc:        nisplus [NOTFOUND=return] files
#ethers:     nisplus [NOTFOUND=return] files
#netmasks:   nisplus [NOTFOUND=return] files

bootparams: nisplus [NOTFOUND=return] files

ethers:     files
netmasks:   files
networks:   files
protocols:  files
rpc:        files
services:   files

netgroup:   files sss

publickey:  nisplus

automount:  files sss
aliases:    files nisplus

</file>


<file name="/etc/pam.d/system-auth" mode="overwrite">
#%PAM-1.0
# This file is auto-generated.
# User changes will be destroyed the next time authconfig is run.
auth        required      pam_env.so
auth        sufficient    pam_unix.so nullok try_first_pass
auth        requisite     pam_succeed_if.so uid >= 500 quiet
auth        sufficient    pam_sss.so use_first_pass
auth        required      pam_deny.so

account     required      pam_unix.so
account     sufficient    pam_succeed_if.so uid &lt; 500 quiet
account     [default=bad success=ok user_unknown=ignore] pam_sss.so
account     required      pam_permit.so

password    requisite     pam_cracklib.so try_first_pass retry=3
password    sufficient    pam_unix.so md5 shadow nullok try_first_pass use_authtok
password    sufficient    pam_sss.so use_authtok
password    required      pam_deny.so

session     optional      pam_keyinit.so revoke
session     required      pam_limits.so
session     optional      pam_mkhomedir.so umask=0022 skel=/etc/skel/
session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
session     required      pam_unix.so
session     optional      pam_sss.so

</file>

<!-- Set symLink for Java -->
ln -s /usr/java/latest/bin/java /usr/bin/java

<!-- # Autologout -->


<file name="/etc/profile.d/autologout.sh" mode="overwrite" perms="755">

case "$(id -un)" in
  root|svc_hpc_auto) ;;
  *)     export TMOUT=43200;readonly TMOUT;;
esac
</file>


<file name="/etc/profile.d/autologout.csh" mode="overwrite" perms="755">
switch (`id -un`)
  case root:
  case svc_hpc_auto:
    unset autologout
    breaksw
  default:
    set -r autologout=720
endsw
</file>

<file name="/etc/fstab" mode="append">

uscp-prd-isi01:/ifs/illumina /illumina          nfs     defaults        0 0
uscp-prd-isi01:/ifs/FARE /FARE                  nfs     defaults        0 0
uscp-prd-isi01:/ifs/home /home                  nfs     defaults        0 0

</file>

<file name="/etc/nagios/nrpe.cfg" mode="overwrite" perms="755">

# Configured via ROCKS
#
#############################################################################

log_facility=daemon

pid_file=/var/run/nrpe/nrpe.pid

server_port=5666

nrpe_user=nrpe

nrpe_group=nrpe

allowed_hosts=10.12.37.11

dont_blame_nrpe=0

debug=0

command_timeout=60

connection_timeout=300

include_dir=/etc/nrpe.d/

command[check_load]=/usr/lib/nagios/plugins/check_load -w 50,40,35 -c 80,60,45
command[check_zombie_procs]=/usr/lib/nagios/plugins/check_procs -w 30 -c 40 -s Z
command[check_local_disk]=/usr/lib/nagios/plugins/check_disk -w 20 -c 10 -l
command[check_swap]=/usr/lib/nagios/plugins/check_swap -w 50 -c 35
command[check_total_procs]=/usr/lib/nagios/plugins/check_procs -w 700 -c 1200
command[check_users]=/usr/lib/nagios/plugins/check_users -w 60 -c 80

</file>


<!-- # Add Submit Host --> 

<file name="/etc/rc.d/rocksconfig.d/post-98-rocks-install" mode="overwrite" perms="755" >
. /etc/profile.d/sge-binaries.sh
$SGE_ROOT/bin/$SGE_ARCH/qconf -as `/bin/hostname --fqdn`
rm -f /etc/rc.d/rocksconfig.d/post-98-rocks-install
</file>

<!-- update grub to boot uek kernel by default -->
<!-- modify grub.conf in the post install - this *only* affects the first boot after install -->
cat &gt;&gt; /boot/grub/grub.conf &lt;&lt;END
title UEK (2.6.32-300.10.1.el5uek)
        root (hd0,0)
        kernel /boot/vmlinuz-2.6.32-300.10.1.el5uek ro root=LABEL=/ console=tty0 console=ttyS1
        initrd /boot/initrd-2.6.32-300.10.1.el5uek.img
END
sed -i 's/default=0/default=1/' /boot/grub/grub.conf
sed -i 's/hiddenmenu/serial --unit=0 --speed=9600\nterminal --timeout=10 serial console/' /boot/grub/grub.conf

<!-- modify grub-orig.conf - this affects subsequent reboots -->
<file name="/etc/rc.d/rocksconfig.d/post-99-grub-uek" mode="overwrite" perms="744">
cat &gt;&gt; /boot/grub/grub-orig.conf &lt;&lt;END
title UEK (2.6.32-300.10.1.el5uek)
        root (hd0,0)
        kernel /boot/vmlinuz-2.6.32-300.10.1.el5uek ro root=LABEL=/ console=tty0 console=ttyS1
        initrd /boot/initrd-2.6.32-300.10.1.el5uek.img
END
sed -i 's/default=0/default=1/' /boot/grub/grub-orig.conf
sed -i 's/hiddenmenu/serial --unit=0 --speed=9600\nterminal --timeout=10 serial console/' /boot/grub/grub.conf
rm -f /etc/rc.d/rocksconfig.d/post-99-grub-uek
</file>

<file name="/etc/inittab" mode="append">
co:2345:respawn:/sbin/agetty ttyS1 115200 vt102
</file>

<!-- Create Directory Mount Points for Isilon -->

mkdir /FARE
mkdir /home
mkdir /illumina

<!-- set up symlink for SGE large memory queue config -->
ln -s /opt/gridengine/req /illumina/gridware/gridengine/req

<!-- add delay to NFS mounts to allow time for bond interfaces to come up -->
sed -i 's/\[ ! -f \/var\/lock\/subsys\/portmap \] &amp;&amp; service portmap start/sleep 20\n\t\    [ ! -f \/var\/lock\/subsys\/portmap \] \&amp;\&amp; service portmap start/' /etc/init.d/netfs


<!-- Configure services on/off -->

/etc/init.d/iptables stop
/sbin/chkconfig iptables off
/etc/init.d/auditd stop
/sbin/chkconfig auditd off
/etc/init.d/cpuspeed stop
/sbin/chkconfig cpuspeed off
/etc/init.d/ip6tables stop
/sbin/chkconfig ip6tables off
/etc/init.d/mdmontior stop
/sbin/chkconfig mdmonitor off
/etc/init.d/lvm2-monitor stop
/sbin/chkconfig lvm2-monitor off
/etc/init.d/snmpd stop
/sbin/chkconfig snmpd off
/etc/init.d/lm_sensors stop
/sbin/chkconfig lm_sensors off
/etc/init.d/messagebus stop
/sbin/chkconfig messagebus off
/etc/init.d/atd stop
/sbin/chkconfig atd off
/etc/init.d/haldaemon stop
/sbin/chkconfig autofs off
/etc/init.d/autofs stop
/sbin/chkconfig nscd on
/etc/init.d/nscd start
/sbin/chkconfig sssd on
/etc/init.d/sssd start
/etc/init.d/rpcidmapd start
/sbin/chkconfig/rpcidmapd on
/etc/init.d/rpcgssd start
/sbin/chkconfig rpcgssd on
/etc/init.d/nrpe start
/sbin/chkconfig nrpe on

<!-- #yum remove iptables -y -->
yum -y remove iptables

<!-- Enable SSSD --> 
authconfig --enablesssd --enablesssdauth --disablekrb5 --enablemkhomedir --enablecache --enablepreferdns --enableshadow --enablemd5 --disablenis --disableldap --disablesmartcard --disablewins --nostart --update

<!-- Dell firmware update -->
wget -q -O - http://linux.dell.com/repo/hardware/latest/bootstrap.cgi | bash
yum install dell_ft_install
yum install $(bootstrap_firmware)
update_firmware --yes

</post>

</kickstart> 
